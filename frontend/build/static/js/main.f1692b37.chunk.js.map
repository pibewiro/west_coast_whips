{"version":3,"sources":["Navbar.js","Landing.jsx","Login.jsx","Register.jsx","Cars.jsx","Contacts.jsx","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","id","className","type","class","for","src","alt","to","Component","Landing","login","props","history","push","register","onClick","this","action","htmlFor","Login","ue","e","preventDefault","alert","state","errorName","Register","regInfo","username","email","password","axios","post","handleUsername","setState","target","value","handleEmail","handlePassword","onChange","Cars","Contacts","Routes","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gSAIqBA,E,iLAIb,OACA,yBAAKC,GAAG,UAEJ,yBAAKC,UAAU,oBACf,2BAAOC,KAAK,WAAWF,GAAG,SAASG,MAAM,UACzC,2BAAOC,IAAI,SAASH,UAAU,eAA9B,UACI,4BAAI,yBAAKE,MAAM,OAAOE,IAAI,eAAeC,IAAI,KAA7C,oBAEA,4BACI,4BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAGJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SAGJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,aAAT,mB,GAtBYC,aCDfC,E,2MAEjBC,MAAQ,WACJ,EAAKC,MAAMC,QAAQC,KAAK,W,EAI5BC,SAAW,WACP,EAAKH,MAAMC,QAAQC,KAAK,c,wEAIxB,OACI,6BACI,kBAAC,EAAD,MAEA,yBAAKb,GAAG,YACJ,yBAAKC,UAAU,oBACX,gDACI,yBAAKA,UAAU,WACX,4BAAQE,MAAM,MAAMY,QAASC,KAAKN,OAAlC,SACA,4BAAQP,MAAM,MAAMY,QAASC,KAAKF,UAAlC,eAKhB,yBAAKd,GAAG,gBACJ,6BACI,yBAAKK,IAAI,UAAUC,IAAI,KACvB,qCAGJ,6BACI,yBAAKD,IAAI,YAAYC,IAAI,KACzB,uCAGJ,6BACI,yBAAKD,IAAI,UAAUC,IAAI,KACvB,sCAIR,yBAAKN,GAAG,WACJ,mDAEA,0BAAMiB,OAAO,IACT,yBAAKhB,UAAU,cACX,2BAAOiB,QAAQ,QAAf,QACA,2BAAOhB,KAAK,UAGhB,yBAAKD,UAAU,cACX,2BAAOiB,QAAQ,SAAf,SACA,2BAAOhB,KAAK,UAGhB,yBAAKD,UAAU,WACX,4BAAQA,UAAU,OAAOc,QAASC,KAAKF,UAAvC,YAKZ,yBAAKd,GAAG,UACJ,uD,GAhEiBQ,aCAhBW,E,YAEjB,aACC,IAAD,8BACI,+CAQJC,GAAK,SAACC,GACFA,EAAEC,iBACFC,MAAM,MARN,EAAKC,MAAQ,CACTJ,GAAG,GACHK,UAAU,IALlB,E,sEAeI,OACI,yBAAKzB,GAAG,iBACJ,kBAAC,EAAD,MACA,yBAAKC,UAAU,UACX,yBAAKD,GAAG,SACJ,yBAAKC,UAAU,YACX,qCACA,0BAAMgB,OAAO,IACT,yBAAKhB,UAAU,cACX,2BAAOiB,QAAQ,YAAf,kBACA,2BAAOhB,KAAK,OAAOF,GAAG,QAG1B,yBAAKC,UAAU,cACX,2BAAOiB,QAAQ,YAAf,YACA,2BAAOhB,KAAK,cAGhB,yBAAKD,UAAU,WACX,4BAAQA,UAAU,OAAOc,QAASC,KAAKI,IAAvC,YAMZ,yBAAKnB,UAAU,cACX,yDAA8B,6BAA9B,iC,GA5COO,a,iBCCdkB,E,YAEjB,aACC,IAAD,8BACI,+CASJZ,SAAW,SAAAO,GACPA,EAAEC,iBAEF,IAAMK,EAAU,CACZC,SAAS,EAAKJ,MAAMI,SACpBC,MAAM,EAAKL,MAAMK,MACjBC,SAAS,EAAKN,MAAMM,UAGxBC,IAAMC,KAAK,kBAAmBL,IAnBlC,EAuBAM,eAAiB,SAACZ,GAAD,OAAO,EAAKa,SAAS,CAACN,SAASP,EAAEc,OAAOC,SAvBzD,EAwBAC,YAAc,SAAChB,GAAD,OAAO,EAAKa,SAAS,CAACL,MAAMR,EAAEc,OAAOC,SAxBnD,EAyBAE,eAAiB,SAACjB,GAAD,OAAO,EAAKa,SAAS,CAACJ,SAAST,EAAEc,OAAOC,SAtBrD,EAAKZ,MAAQ,CACTI,SAAS,GACTC,MAAM,GACNC,SAAS,IANjB,E,sEA6BI,OACI,yBAAK9B,GAAG,iBACJ,kBAAC,EAAD,MACA,yBAAKC,UAAU,UACX,yBAAKD,GAAG,SACJ,yBAAKC,UAAU,YACX,qCACA,0BAAMgB,OAAO,IACT,yBAAKhB,UAAU,cACX,2BAAOiB,QAAQ,YAAf,YACA,2BAAOhB,KAAK,OAAOqC,SAAUvB,KAAKiB,kBAGtC,yBAAKhC,UAAU,cACX,2BAAOiB,QAAQ,YAAf,SACA,2BAAOhB,KAAK,OAAOqC,SAAUvB,KAAKqB,eAGtC,yBAAKpC,UAAU,cACX,2BAAOiB,QAAQ,YAAf,YACA,2BAAOhB,KAAK,OAAOqC,SAAUvB,KAAKsB,kBAGtC,yBAAKrC,UAAU,WACX,4BAAQA,UAAU,OAAOc,QAASC,KAAKF,UAAvC,YAMZ,yBAAKb,UAAU,cACX,yDAA8B,6BAA9B,iC,GA/DUO,aCDjBgC,E,iLAEb,OACI,6BACI,kBAAC,EAAD,MACA,4C,GALkBhC,aCAbiC,E,iLAEb,OACI,6BACI,kBAAC,EAAD,MACA,4C,GALsBjC,aCMvB,SAASkC,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpC,IACjC,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,SAASC,UAAW1B,IACtC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,YAAYC,UAAWnB,IACzC,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,QAAQC,UAAWL,IACrC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,YAAYC,UAAWJ,MCL1CK,MARf,WACE,OACE,yBAAK7C,UAAU,OACb,kBAACyC,EAAD,QCKcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f1692b37.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\n\n\nexport default class Navbar extends Component {\n\n    \n    render() {\n        return (\n        <div id=\"navbar\">\n\n            <div className=\"navbar-container\">\n            <input type=\"checkbox\" id=\"toggle\" class=\"check\" />\n            <label for=\"toggle\" className=\"toggleLabel\">&#9776;</label>\n                <h1><img class=\"logo\" src=\"download.png\" alt=\"\"/>\n                    West Coast Whips</h1>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/cars\">Cars</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/contacts\">Contact</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Navbar from \"./Navbar\"\n\nexport default class Landing extends Component {\n\n    login = () => {\n        this.props.history.push(\"/login\")\n    }\n\n\n    register = () => {\n        this.props.history.push(\"/register\")\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar />\n\n                <div id=\"showcase\">\n                    <div className=\"showcase-content\">\n                        <h1>West Coast Whips</h1>\n                            <div className=\"btn-div\">\n                                <button class=\"btn\" onClick={this.login}>Login</button>\n                                <button class=\"btn\" onClick={this.register}>Register</button>\n                            </div>\n                    </div>\n                </div>\n\n                <div id=\"info-content\">\n                    <div>\n                        <img src=\"car.jpg\" alt=\"\"/>\n                        <h2>Cars</h2>\n                    </div>\n\n                    <div>\n                        <img src=\"truck.jpg\" alt=\"\"/>\n                        <h2>Trucks</h2>\n                    </div>\n\n                    <div>\n                        <img src=\"suv.jpg\" alt=\"\"/>\n                        <h2>SUVs</h2>\n                    </div>\n                </div>\n\n                <div id=\"special\">\n                    <h1>Recieve Specialties</h1>\n\n                    <form action=\"\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Name</label>\n                            <input type=\"text\"/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"text\"/>\n                        </div>\n\n                        <div className=\"btn-div\">\n                            <button className=\"btn2\" onClick={this.register}>Enter</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div id=\"footer\">\n                    <p>Copright &copy; 2019</p>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Navbar from \"./Navbar\"\n\nexport default class Login extends Component {\n\n    constructor()\n    {\n        super()\n\n        this.state = {\n            ue:\"\",\n            errorName:\"\"\n        }\n    }\n\n    ue = (e) => {\n        e.preventDefault();\n        alert(123)\n    }\n\n    render() {\n        return (\n            <div id=\"login-content\">\n                <Navbar />\n                <div className=\"center\">\n                    <div id=\"login\">\n                        <div className=\"form-div\">\n                            <h1>Login</h1>\n                            <form action=\"\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Username/Email</label>\n                                    <input type=\"text\" id=\"ue\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Password</label>\n                                    <input type=\"password\"/>\n                                </div>\n\n                                <div className=\"btn-div\">\n                                    <button className=\"btn2\" onClick={this.ue}>Enter</button>\n                                </div>\n                            </form>\n                        </div>\n\n\n                        <div className=\"login-info\">\n                            <h1>Checkout 1000s of New cars<br />From all over the USA</h1>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Navbar from \"./Navbar\"\nimport axios from \"axios\"\n\nexport default class Register extends Component {\n\n    constructor()\n    {\n        super()\n\n        this.state = {\n            username:\"\",\n            email:\"\",\n            password:\"\"\n        }\n    }\n\n    register = e => {\n        e.preventDefault()\n\n        const regInfo = {\n            username:this.state.username,\n            email:this.state.email,\n            password:this.state.password\n        }\n\n        axios.post(\"/users/register\", regInfo)\n        //.then(()=>alert(123))\n    }\n\n    handleUsername = (e) => this.setState({username:e.target.value})\n    handleEmail = (e) => this.setState({email:e.target.value})\n    handlePassword = (e) => this.setState({password:e.target.value})\n    \n\n    render() {\n        return (\n            <div id=\"login-content\">\n                <Navbar />\n                <div className=\"center\">\n                    <div id=\"login\">\n                        <div className=\"form-div\">\n                            <h1>Login</h1>\n                            <form action=\"\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Username</label>\n                                    <input type=\"text\" onChange={this.handleUsername} />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Email</label>\n                                    <input type=\"text\" onChange={this.handleEmail} />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Password</label>\n                                    <input type=\"text\" onChange={this.handlePassword} />\n                                </div>\n\n                                <div className=\"btn-div\">\n                                    <button className=\"btn2\" onClick={this.register}>Enter</button>\n                                </div>\n                            </form>\n                        </div>\n\n\n                        <div className=\"login-info\">\n                            <h1>Checkout 1000s of New cars<br />From all over the USA</h1>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Navbar from \"./Navbar\"\n\nexport default class Cars extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <p>The cars</p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Navbar from \"./Navbar\"\n\nexport default class Contacts extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <p>contacts</p>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport Landing from \"./Landing\"\nimport Login from \"./Login\"\nimport Register from './Register';\nimport Cars from './Cars';\nimport Contacts from './Contacts';\n\n\nexport default function Routes() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Landing} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/cars\" component={Cars} />\n                <Route exact path=\"/contacts\" component={Contacts} />\n            </Switch>\n        </Router>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport Routes from \"./Routes\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}